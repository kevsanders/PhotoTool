ALTER TABLE PHOTO_DATES ADD COLUMN google_date varchar(25);
ALTER TABLE PHOTO_DATES ADD COLUMN best_date varchar(25);
DELETE FROM PHOTO_DATES WHERE SOURCE_FILE LIKE '%.json';
UPDATE PHOTO_DATES SET google_date=SUBSTRING(source_file, 47, 10) WHERE SOURCE_FILE LIKE 'D:/google-takeout%';
UPDATE PHOTO_DATES SET best_date=COALESCE (CASE 
		WHEN length(date_time_original) > 0 AND date_time_original > '2000' THEN date_time_original 
		WHEN length(create_date) > 0 AND create_date > '2000' THEN create_date 
		WHEN length(modify_date) > 0 AND modify_date > '2000' THEN modify_date
		WHEN length(google_date) > 0 AND google_date > '2000' THEN google_date 
	END);




SELECT * FROM PHOTO_DATES pd WHERE SOURCE_FILE ='D:/google-takeout/3rd-go/Takeout/GooglePhotos/2016-05-20/IMG_1178.MOV'

SELECT * FROM PHOTO_DATES pd WHERE SOURCE_FILE ='D:/google-takeout/3rd-go/Takeout/GooglePhotos/2016-08-31/IMG_3378.JPG'
SELECT * FROM PHOTO_DATES pd WHERE SOURCE_FILE ='D:/google-takeout/3rd-go/Takeout/GooglePhotos/2018-04-04/IMG_3378(1).JPG'



2302158_3bde1a4d8e0918a58980d6bfd611829b+5ee62b074672a823c77bd9643713439c4e309296,D:\google-takeout\3rd-go\Takeout\GooglePhotos\2015-04-19\IMG_2042.JPG
2302158_3bde1a4d8e0918a58980d6bfd611829b+5ee62b074672a823c77bd9643713439c4e309296,D:\Media\photos\201508_KevinsPhone\IMG_2042.JPG

SELECT * FROM PHOTO_DATES pd WHERE SOURCE_FILE ='D:/google-takeout/3rd-go/Takeout/GooglePhotos/2015-04-19/IMG_2042.JPG'
SELECT * FROM PHOTO_DATES pd WHERE SOURCE_FILE ='D:/Media/photos/201508_KevinsPhone/IMG_2042.JPG'


SELECT INSTR(SOURCE_FILE,'2016-05-20') FROM PHOTO_DATES pd WHERE SOURCE_FILE ='D:/google-takeout/3rd-go/Takeout/GooglePhotos/2016-05-20/IMG_1178.MOV'


ALTER TABLE DUPLICATES ADD COLUMN score int;
ALTER TABLE DUPLICATES ADD COLUMN best_date varchar(25);
UPDATE DUPLICATES SET SOURCE_FILE = REPLACE(SOURCE_FILE,'\','/') 

--method1
UPDATE DUPLICATES 
	SET best_date=pd.BEST_DATE --SELECT dup.SOURCE_FILE,pd.BEST_DATE
FROM DUPLICATES dup
JOIN PHOTO_DATES pd ON (pd.SOURCE_FILE = dup.SOURCE_FILE )
WHERE dup.BEST_DATE IS null

--method2
MERGE DUPLICATES AS dup 
USING(SELECT SOURCE_FILE,BEST_DATE FROM PHOTO_DATES) AS pd   
ON pd.SOURCE_FILE=dup.SOURCE_FILE 
WHEN MATCHED THEN
UPDATE SET 
dup.BEST_DATE=pd.BEST_DATE;

--method3
UPDATE DUPLICATES
SET  DUPLICATES.BEST_DATE=(SELECT PHOTO_DATES.BEST_DATE
                            FROM PHOTO_DATES
                            WHERE DUPLICATES.SOURCE_FILE = PHOTO_DATES.SOURCE_FILE)
WHERE LENGTH(DUPLICATES.BEST_DATE)=0  
                            
UPDATE DUPLICATES SET score=COALESCE (CASE 
		WHEN INSTR(SOURCE_FILE, 'Media') > 0 THEN 1 
		WHEN INSTR(SOURCE_FILE, 'Media') > 0 AND INSTR(SOURCE_FILE, BASE_NAME) > 0 THEN 1 
		WHEN INSTR(SOURCE_FILE, BEST_DATE) > 0 AND INSTR(SOURCE_FILE, BASE_NAME) > 0 THEN 2
		WHEN INSTR(SOURCE_FILE, BEST_DATE) = 0 THEN 5
		WHEN INSTR(SOURCE_FILE, BASE_NAME) > 0 THEN 7
		WHEN SOURCE_FILE LIKE '%2017-08-28%' THEN 4  
		WHEN SOURCE_FILE LIKE '%duplicate%' THEN 4
		WHEN SOURCE_FILE LIKE '%(1)%' THEN 3
		WHEN SOURCE_FILE LIKE '%edited%' THEN 3
		ELSE 10
	END)
WHERE LONG_HASH ='1000799_84dfa849e88a3d8281271ecd77e95d39+211a34f7764f8f9c243050cc43180615932f7a3f'


66064_2f8249e11793e75b536d4c52c55d5463+6a4c827681440161c68b87122d3c778c5d2d79ff
90640_1dcbecd3d82196eaa9ec7b2741a8a66c+6e771e832fbcab22b5661e17623bd66ef8c582b3

select 
COALESCE (CASE 
		WHEN INSTR(SOURCE_FILE, 'Media') > 0 THEN 1 
		WHEN INSTR(SOURCE_FILE, 'Media') > 0 AND INSTR(SOURCE_FILE, BASE_NAME) > 0 THEN 1 
		WHEN INSTR(SOURCE_FILE, BEST_DATE) > 0 AND INSTR(SOURCE_FILE, BASE_NAME) > 0 THEN 2
		WHEN INSTR(SOURCE_FILE, BEST_DATE) = 0 THEN 5
		WHEN INSTR(SOURCE_FILE, BASE_NAME) > 0 THEN 7
		WHEN SOURCE_FILE LIKE '%2017-08-28%' THEN 4  
		WHEN SOURCE_FILE LIKE '%duplicate%' THEN 3
		WHEN SOURCE_FILE LIKE '%(1)%' THEN 3
		WHEN SOURCE_FILE LIKE '%edited%' THEN 3
		ELSE 10
	END) score
,ROW_NUMBER() over(PARTITION BY LONG_HASH,BEST_DATE,BASE_NAME ORDER BY score) row_num
,replace(SOURCE_FILE,'/','\') pname
,BEST_DATE
,BASE_NAME 
,NUM 
--,REVERSE(SUBSTRING(REVERSE([SOURCE_FILE]),0,CHARINDEX('/',REVERSE([SOURCE_FILE]))))
FROM DUPLICATES 
--WHERE long_hash='66064_2f8249e11793e75b536d4c52c55d5463+6a4c827681440161c68b87122d3c778c5d2d79ff'      --simple duplicate
--WHERE long_hash='90640_1dcbecd3d82196eaa9ec7b2741a8a66c+6e771e832fbcab22b5661e17623bd66ef8c582b3'     --simple case with a (1)
--WHERE long_hash='65680_d86577b39ddd10111d6d98561f25e1a1+1ce620014ddd8304ef5b168989d4b0941d7219a4'     --there are actually 3 set of pairs (this identifies the correct duplicate but for the wrong reasons)
--WHERE long_hash='65680_d86577b39ddd10111d6d98561f25e1a1+1ce620014ddd8304ef5b168989d4b0941d7219a4'      --there are actually 3 set of pairs (this identifies the correct duplicate but for the wrong reasons)
--WHERE long_hash='3135495_9f2a4d7bb4b2ed4a5520f91882b6b47e+58f1566daea3e93a8f79030eef750807a395a692'  --should recognise that this is the same name but different folder so ok to delete
--WHERE long_hash='130924_225b6ac123b449c0d4c83dc7601b711f+5688d785a090d620bfbaea694e33af51a6ec19a1'   --should recognise odd one out is probably not a duplicate
--WHERE long_hash='1592341_eb5a62ba1c6bd40b33116674354a5c5a+e2fba665ecce8d9d65cb9e5c3dfb93dbb501afb8'    --many google duplicates
--WHERE long_hash='1074120_b94868dc567b3e50ee53792c0b965dfd+95d588d9a96e7f2e62cd930134443985b3c92ee0'    --which of these is actually the best date
--WHERE LONG_HASH ='1000799_84dfa849e88a3d8281271ecd77e95d39+211a34f7764f8f9c243050cc43180615932f7a3f'
WHERE BASE_NAME = '00248.jpg'
ORDER BY 1 asc


SELECT * FROM DUPLICATES d WHERE SOURCE_FILE LIKE '%edited%'
SELECT * FROM DUPLICATES d2  WHERE LONG_HASH ='175510457_85624bcf731f7c547e25c91731da21c4+c369a4b9efe049edc57b08610aae55f59f9af354'
SELECT * FROM PHOTO_DATES pd WHERE SOURCE_FILE LIKE '%IMG_3311.JPG'


CASE 
	WHEN match(hash) AND match(best_date) AND match(base_name)

--identify #1 local original + 1 google duplicate	
SELECT DISTINCT DUPLICATE --SELECT count(*) 
FROM (	
	SELECT 
	d1.LONG_HASH
	,d1.BEST_DATE 
	,d1.BASE_NAME 
	,replace(d1.SOURCE_FILE,'/','\') original
	,replace(d2.SOURCE_FILE,'/','\') duplicate
	,ROW_NUMBER() over(PARTITION BY d1.LONG_HASH,d1.BASE_NAME ORDER BY d1.score) row_num1
	,ROW_NUMBER() over(PARTITION BY d2.LONG_HASH,d2.BASE_NAME ORDER BY d2.score) row_num2
	FROM DUPLICATES d1
	--JOIN DUPLICATES d2 ON (d1.LONG_HASH =d2.LONG_HASH AND d1.BASE_NAME =d2.BASE_NAME AND d1.BEST_DATE = d2.BEST_DATE AND d1.NUM = d2.num)
	JOIN DUPLICATES d2 ON (d1.LONG_HASH =d2.LONG_HASH AND d1.BASE_NAME =d2.BASE_NAME AND d1.NUM = d2.num)
	WHERE d1.SCORE =1 AND d2.SCORE =2
) 

--identify #2 anything that has a duplicate by hash, date, name
SELECT SOURCE_FILE --select count(*) 
FROM (	
SELECT 
ROW_NUMBER() over(PARTITION BY LONG_HASH,BEST_DATE,BASE_NAME ORDER BY score) row_num 
,rank() over(PARTITION BY LONG_HASH,BEST_DATE,BASE_NAME ORDER BY score) rnk
,*
FROM DUPLICATES d 
--WHERE LONG_HASH ='175510457_85624bcf731f7c547e25c91731da21c4+c369a4b9efe049edc57b08610aae55f59f9af354'
--WHERE long_hash='65680_d86577b39ddd10111d6d98561f25e1a1+1ce620014ddd8304ef5b168989d4b0941d7219a4'
--WHERE long_hash='130924_225b6ac123b449c0d4c83dc7601b711f+5688d785a090d620bfbaea694e33af51a6ec19a1'
--WHERE SOURCE_FILE LIKE '%PICT1081.JPG'
) x
WHERE row_num>1 --AND SOURCE_FILE LIKE '%duplicate%'
ORDER BY SOURCE_FILE
--ORDER BY LONG_HASH,RNK,BEST_DATE 

SELECT count(DISTINCT LONG_HASH) FROM DUPLICATES d 

--select match by hash,name and date
SELECT 
left(LONG_HASH, INSTR(LONG_HASH, '_') + 5) hash, replace(SOURCE_FILE,'/','\') original, row_num,BEST_DATE,BASE_NAME
--'rm "' ||SOURCE_FILE||'"' 
--select count(*) 
FROM (	
SELECT 
ROW_NUMBER() over(PARTITION BY LONG_HASH,BEST_DATE,BASE_NAME ORDER BY score) row_num 
,rank() over(PARTITION BY LONG_HASH,BEST_DATE,BASE_NAME ORDER BY score) rnk
,*
FROM DUPLICATES d 
--WHERE LONG_HASH ='175510457_85624bcf731f7c547e25c91731da21c4+c369a4b9efe049edc57b08610aae55f59f9af354'
--WHERE long_hash='65680_d86577b39ddd10111d6d98561f25e1a1+1ce620014ddd8304ef5b168989d4b0941d7219a4'
--WHERE long_hash='130924_225b6ac123b449c0d4c83dc7601b711f+5688d785a090d620bfbaea694e33af51a6ec19a1'
--WHERE SOURCE_FILE LIKE '%PICT1081.JPG'
--WHERE SOURCE_FILE like'%DSC09031.JPG'
--WHERE SOURCE_FILE LIKE'%EPSN0348-MOTION.gif'
WHERE SOURCE_FILE LIKE '%00248-edited.jpg'
) x
--WHERE row_num>1 --AND SOURCE_FILE LIKE '%Media%'
--ORDER BY SOURCE_FILE
ORDER BY LONG_HASH,row_num




--select match by hash,name but not date
SELECT 
left(LONG_HASH, INSTR(LONG_HASH, '_') + 5) hash, replace(SOURCE_FILE,'/','\') original, row_num,BEST_DATE,BASE_NAME,SCORE
--'rm "' ||SOURCE_FILE||'"' 
--select count(*) 
FROM (	
SELECT 
ROW_NUMBER() over(PARTITION BY LONG_HASH,BASE_NAME ORDER BY score) row_num 
,rank() over(PARTITION BY LONG_HASH,BASE_NAME ORDER BY score) rnk
,*
FROM DUPLICATES d 
--WHERE LONG_HASH ='175510457_85624bcf731f7c547e25c91731da21c4+c369a4b9efe049edc57b08610aae55f59f9af354'
--WHERE long_hash='65680_d86577b39ddd10111d6d98561f25e1a1+1ce620014ddd8304ef5b168989d4b0941d7219a4'
--WHERE long_hash='130924_225b6ac123b449c0d4c83dc7601b711f+5688d785a090d620bfbaea694e33af51a6ec19a1'
--WHERE SOURCE_FILE LIKE '%PICT1081.JPG'
--WHERE SOURCE_FILE like'%DSC09031.JPG'
--WHERE SOURCE_FILE LIKE'%EPSN0348-MOTION.gif'
--WHERE SOURCE_FILE LIKE '%00248-edited.jpg'
) x
--WHERE row_num>1 --AND SOURCE_FILE LIKE '%Media%'
--ORDER BY SOURCE_FILE
ORDER BY LONG_HASH,row_num







SELECT * FROM DUPLICATES pd WHERE SOURCE_FILE LIKE '%Amelia_s Christening%'
SELECT * FROM PHOTO_DATES WHERE SOURCE_FILE LIKE'%EPSN0348-MOTION.gif'

SELECT left('ab_b', instr('ab_b', '_')-1)
SELECT instr('ab_b', '_')

--,FIRST_VALUE(SOURCE_FILE) OVER (PARTITION BY LONG_HASH,BEST_DATE,BASE_NAME ORDER BY score 
--                                   ROWS UNBOUNDED PRECEDING  
--                                  ) AS keeper  


SELECT SOURCE_FILE,count(*) FROM DUPLICATES d GROUP BY SOURCE_FILE HAVING count(*)>1


SELECT NAME,count(*) FROM IMPORTED GROUP BY NAME HAVING count(*) >1

SELECT * FROM (
	SELECT
	count(*) over(PARTITION BY NAME) NUM, *
	FROM IMPORTED 
	--WHERE NAME='100_0173.jpg'
) x 
WHERE num>1 
--AND NAME='100_0173.jpg'
ORDER BY NAME, SOURCE_FILE
